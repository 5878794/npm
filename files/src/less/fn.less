//注意:注入咯全局变量 tt = 编译时的时间戳


@minWidth:1200px;
@maxWidth:1920px;
@useRem:true;



.page(){
    min-width:@minWidth;
    max-width:@maxWidth;
    width:100%;
    margin: 0 auto;
}

//背景图片带参数防止缓存============================
.bg(@a;@repeat:no-repeat;@left:center;@top:center){
    @url:"@{a}?tt=@{tt}";
    background: url(@url) @repeat @left @top;
}
.bgImage(@a;@repeat:no-repeat;@left:center;@top:center){
    @url:"@{a}?tt=@{tt}";
    background-image:url(@url);
    background-repeat: @repeat;
    background-position: @left @top;
}


//px 转 rem ========================================= start
.attr(@name,@px...){
    @n:length(@px); //获取参数的个数
    .attr1(@name,@px,@n);
}
.attr1(@name,@px,@n) when (@n>0){
    .attr1(@name,@px,@n - 1);   //自身循环
    @val:extract(@px,@n);       //获取参数中的第几个
    .attr2(@name,@val);         //处理参数
}
.attr2(@name,@val) when(isNumber(@val)=false){
    @{name}+_:@val;     //合并所以参数到 @name 中的写法
}
.attr2(@name,@val) when(isNumber(@val)=true) and (@useRem=true){
    @{name}+_:unit(@val/100,rem);       //js中rem定义的要/100
}
.attr2(@name,@val) when(isNumber(@val)=true) and (@useRem=false){
    @{name}+_:unit(@val,px);
}
//px 转 rem ========================================= end




.canHover(){
    cursor: pointer;
    -webkit-transition: all 0.3s ease-in;
    -moz-transition: all 0.3s ease-in;
    -o-transition: all 0.3s ease-in;
    transition: all 0.3s ease-in;
    &:hover{
        opacity: 0.7;
    }
}
.animate(){
    -webkit-transition: all 400ms ease-out;
    -moz-transition : all 400ms ease-out;
    -ms-transition : all 400ms ease-out;
    -o-transition :all 400ms ease-out;
    transition : all 400ms ease-out;
}